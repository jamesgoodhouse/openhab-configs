rule "Fireplace — Thermostat"
when
  Item HVAC_IndoorUnit_LivingRoom_Temperature changed or
  Item Fireplace_Thermostat_Power changed to ON or
  Item Fireplace_Thermostat_SetPoint changed or
  Item Fireplace_Thermostat_Hysteresis changed
then
  if (Fireplace_Thermostat_Power.state == ON) {
    val hysteresis = (Fireplace_Thermostat_Hysteresis.state as QuantityType<Temperature>).intValue
    val setpoint = (Fireplace_Thermostat_SetPoint.state as QuantityType<Temperature>).intValue
    val temp = (HVAC_IndoorUnit_LivingRoom_Temperature.state as QuantityType<Temperature>).intValue

    logInfo("fireplace", "Fireplace — State:      {}", Fireplace_State.state)
    logInfo("fireplace", "Fireplace — SetPoint:   {}", setpoint)
    logInfo("fireplace", "Fireplace — Hysteresis: {}", hysteresis)
    logInfo("fireplace", "Fireplace — Temp:       {}", temp)

    if (temp <= (setpoint - hysteresis)) {
      logInfo("fireplace", "Fireplace — Turning on fireplace")
      Fireplace_Power.sendCommand(ON)
    } else if (temp >= setpoint) {
      logInfo("fireplace", "Fireplace — Turning off fireplace")
      Fireplace_Power.sendCommand(OFF)
    } else {
      logInfo("fireplace", "Fireplace — Doing nothing")
    }
  }
end

rule "Fireplace — Turn Off"
when
  Item Fireplace_Thermostat_Power changed to OFF or
  Item Fireplace_State changed to OFF
then
  if (Fireplace_Power.state == ON) {
    Fireplace_Power.sendCommand(OFF)
  }
end

// ensure it actually was turned on, otherwise set power to OFF
rule "Fireplace — Check Status After Turning On"
when
  Item Fireplace_Power changed to ON
then
  logInfo("fireplace", "Fireplace — Turning on")

  createTimer(now.plusSeconds(2), [ |
    if (Fireplace_State.state == OFF) {
      logInfo("fireplace", "Fireplace — Failed to turn on")

      Fireplace_Power.sendCommand(OFF)
    }
  ])
end

rule "Fireplace Controller — Offline"
when
  Item Fireplace_Controller_Status changed to OFFLINE
then
  val telegramAction = getActions("telegram", "telegram:telegramBot:boty_mcbotface")
  telegramAction.sendTelegram("⚠️ Fireplace Controller is offline")
end

rule "Fireplace Controller — Online"
when
  Item Fireplace_Controller_Status changed to ONLINE
then
  val telegramAction = getActions("telegram", "telegram:telegramBot:boty_mcbotface")
  telegramAction.sendTelegram("✅ Fireplace Controller is online")
end
