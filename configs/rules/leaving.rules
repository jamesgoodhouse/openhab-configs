import java.util.ArrayList
import java.util.List

rule "Check Doors When Leaving"
when
  Item PresentWithDelay_30 changed to OFF
then
  val List<String> openDoors = new ArrayList<String>()

  if (Sensor_Binary_DeckDoor_State.state        == OPEN) openDoors.add("Deck Door")
  if (Sensor_Binary_FrontDoor_State.state       == OPEN) openDoors.add("Front Door")
  if (Sensor_Tilt_GarageDoor_State.state        == OPEN) openDoors.add("Garage Door")
  if (Sensor_Binary_GarageEntryDoor_State.state == OPEN) openDoors.add("Garage Entry Door")

  if (openDoors.size() > 0) {
    val telegramAction = getActions("telegram","telegram:telegramBot:boty_mcbotface")
    telegramAction.sendTelegram("⚠️ One or more doors were left open: \n\n*" + String.join("\n", openDoors) + "*")
  }
end

rule "Turn Off HVAC When Leaving"
when
  Item PresentWithDelay_30 changed to OFF
then
  if (Fireplace_Thermostat_Power.state == ON && Fireplace_Thermostat_KeepOnWhenLeaving.state != ON) {
    logInfo("fireplace", "Fireplace — Turning Off")
    Fireplace_Thermostat_Power.sendCommand(OFF)
  }
  if (HVAC_IndoorUnit_LivingRoom_Power.state == ON && HVAC_IndoorUnit_LivingRoom_KeepOnWhenLeaving.state != ON) {
    logInfo("hvac", "Living Room HVAC — Turning Off")
    HVAC_IndoorUnit_LivingRoom_Power.sendCommand(OFF)
  }
  if (HVAC_IndoorUnit_MainBedroom_Power.state == ON && HVAC_IndoorUnit_MainBedroom_KeepOnWhenLeaving.state != ON) {
    logInfo("hvac", "Main Bedroom HVAC — Turning Off")
    HVAC_IndoorUnit_MainBedroom_Power.sendCommand(OFF)
  }
end

rule "Turn Off Lights When Leaving"
when
  Item PresentWithDelay_30 changed to OFF
then
  if (Light_Garage_Switch.state == ON) Light_Garage_Switch.sendCommand(OFF)
end
