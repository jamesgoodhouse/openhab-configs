var Timer PresentWithDelayTimer_30
var Timer PresentWithDelayTimer_60
var Timer PresentWithDelayTimer_90

rule "Presence Delay — Leaving"
when
  Item Present changed to OFF
then
  if (PresentWithDelayTimer_30 !== null) PresentWithDelayTimer_30.cancel()
  if (PresentWithDelayTimer_60 !== null) PresentWithDelayTimer_60.cancel()
  if (PresentWithDelayTimer_90 !== null) PresentWithDelayTimer_90.cancel()

  PresentWithDelayTimer_30 = createTimer(now.plusSeconds(30), [ |
    if (Present.state == OFF) PresentWithDelay_30.postUpdate(OFF)
  ])
  PresentWithDelayTimer_60 = createTimer(now.plusSeconds(60), [ |
    if (Present.state == OFF) PresentWithDelay_60.postUpdate(OFF)
  ])
  PresentWithDelayTimer_90 = createTimer(now.plusSeconds(90), [ |
    if (Present.state == OFF) PresentWithDelay_90.postUpdate(OFF)
  ])
end

rule "Presence Delay — Return"
when
  Item Present changed to ON
then
  if (PresentWithDelayTimer_30 !== null) PresentWithDelayTimer_30.cancel()
  if (PresentWithDelayTimer_60 !== null) PresentWithDelayTimer_60.cancel()
  if (PresentWithDelayTimer_90 !== null) PresentWithDelayTimer_90.cancel()

  PresentWithDelay_30.postUpdate(ON)
  PresentWithDelay_60.postUpdate(ON)
  PresentWithDelay_90.postUpdate(ON)
end
