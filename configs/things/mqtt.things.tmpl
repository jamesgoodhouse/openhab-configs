Bridge mqtt:broker:mosquitto [
  host="{{ (ds "secrets").things.mqtt.host }}",
  port={{ (ds "secrets").things.mqtt.port }},
  secure={{ (ds "secrets").things.mqtt.secure }},
  username="{{ (ds "secrets").things.mqtt.username }}",
  password="{{ (ds "secrets").things.mqtt.password }}",
  certificatepin=false,
  publickeypin=false
] {
  // konnected
  Thing topic konnected "Konnected Alarm Panel Pro" {
    Channels:
      Type string : online "Online" [
        stateTopic="konnected/status"
      ]
  }

  // sensors
  Thing topic sensor_door_front "Front Door Sensor" {
    Channels:
      Type string : state "State" [
        stateTopic="konnected/binary_sensor/front_door/state"
      ]
  }
  Thing topic sensor_door_deck "Deck Door Sensor" {
    Channels:
      Type string : state "State" [
        stateTopic="konnected/binary_sensor/deck_door/state"
      ]
  }
  Thing topic sensor_door_garage_entry "Garage Entry Door Sensor" {
    Channels:
      Type string : state "State" [
        stateTopic="konnected/binary_sensor/garage_entry_door/state"
      ]
  }
  Thing topic sensor_motion_detector "Motion Detector" {
    Channels:
      Type string : state "State" [
        stateTopic="konnected/binary_sensor/motion_detector/state"
      ]
  }

  // sensor reporter
  Thing topic sensor_reporter "Sensor Reporter" {
    Channels:
      Type string : online "Online" [
        stateTopic="sensor_reporter/status"
      ]
  }

  // james' phone
  Thing topic phone_james "James' Phone" {
    Channels:
      Type string : online "Online" [
        stateTopic="sensor_reporter/phone_james"
      ]
  }

  // fireplace
  Thing topic fireplace "Fireplace" {
    Channels:
      Type string : status "Online" [
        stateTopic="rpi/fireplace/status"
      ]
      Type switch : power "Power" [
        commandTopic="rpi/fireplace/power",
        retained=true
      ]
      Type contact : state "State" [
        stateTopic="rpi/fireplace/state"
      ]
  }
}
